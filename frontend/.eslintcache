[{"D:\\my-app\\frontend\\src\\index.js":"1","D:\\my-app\\frontend\\src\\App.js":"2","D:\\my-app\\frontend\\src\\reportWebVitals.js":"3","D:\\my-app\\frontend\\src\\components\\auth\\Login.js":"4","D:\\my-app\\frontend\\src\\components\\posts\\PostsList.js":"5","D:\\my-app\\frontend\\src\\components\\layout\\navigation\\Nav.js":"6","D:\\my-app\\frontend\\src\\components\\auth\\SignUp.js":"7","D:\\my-app\\frontend\\src\\components\\posts\\NewPost.js":"8","D:\\my-app\\frontend\\src\\components\\layout\\navigation\\SignedInLinks.js":"9","D:\\my-app\\frontend\\src\\components\\posts\\Post.js":"10","D:\\my-app\\frontend\\src\\components\\layout\\navigation\\SignedOutLinks.js":"11","D:\\my-app\\frontend\\src\\components\\popup\\Popup.js":"12","D:\\my-app\\frontend\\src\\components\\popup\\PopupSuccess.js":"13"},{"size":613,"mtime":1609506538168,"results":"14","hashOfConfig":"15"},{"size":2214,"mtime":1609506538107,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":2972,"mtime":1609506538108,"results":"18","hashOfConfig":"15"},{"size":945,"mtime":1609506538167,"results":"19","hashOfConfig":"15"},{"size":513,"mtime":1609506538128,"results":"20","hashOfConfig":"15"},{"size":3687,"mtime":1609506538109,"results":"21","hashOfConfig":"15"},{"size":2306,"mtime":1609506538165,"results":"22","hashOfConfig":"15"},{"size":466,"mtime":1609506538139,"results":"23","hashOfConfig":"15"},{"size":1522,"mtime":1609506538166,"results":"24","hashOfConfig":"15"},{"size":707,"mtime":1609506538162,"results":"25","hashOfConfig":"15"},{"size":336,"mtime":1609506538163,"results":"26","hashOfConfig":"15"},{"size":437,"mtime":1609506538164,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1m4sp99",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"D:\\my-app\\frontend\\src\\index.js",[],"D:\\my-app\\frontend\\src\\App.js",[],["58","59"],"D:\\my-app\\frontend\\src\\reportWebVitals.js",[],"D:\\my-app\\frontend\\src\\components\\auth\\Login.js",["60"],"import React, { useState } from 'react';\r\nimport Popup from '../popup/Popup';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport './Auth.css';\r\nimport SignedInLinks from '../layout/navigation/SignedInLinks';\r\n\r\nfunction Login() {\r\n  let history = useHistory();\r\n\r\n  const [state, setState] = useState({\r\n    username: '',\r\n    password: '',\r\n  });\r\n\r\n  const [popup, setPopup] = useState(false);\r\n  const [errors, setErrors] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setState((prevProps) => ({\r\n      ...prevProps,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    axios\r\n      .post('http://localhost:8080/login', state)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        localStorage.setItem('token', response.data.accessToken);\r\n        localStorage.setItem('refresh_token', response.data.refreshToken);\r\n        history.push('/posts');\r\n        window.location.reload();\r\n      })\r\n      .catch((error) => {\r\n        if (error.response.data) {\r\n          setPopup(true);\r\n          setErrors(error.response.data);\r\n          setTimeout(() => {\r\n            window.location.reload();\r\n            setPopup(false);\r\n          }, 10000);\r\n        }\r\n      });\r\n  };\r\n\r\n  if (popup) {\r\n    return <Popup errors={errors} />;\r\n  }\r\n\r\n  return (\r\n    <section className='container'>\r\n      <h3 className='section__title'>/ Login</h3>\r\n      <div className='outer'>\r\n        <div className='inner'>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className='input-grids'>\r\n              <div className='form-group'>\r\n                {/* <label htmlFor='username' className='form-label'>\r\n                  Username\r\n                </label> */}\r\n                <input\r\n                  type='text'\r\n                  className='form-control'\r\n                  placeholder='Username*'\r\n                  value={state.username}\r\n                  name='username'\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n\r\n              <div className='form-group'>\r\n                {/* <label htmlFor='password'>Password</label> */}\r\n                <input\r\n                  type='password'\r\n                  className='form-control'\r\n                  placeholder='Password*'\r\n                  value={state.password}\r\n                  name='password'\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <button type='submit' className='form-btn btn-outline'>\r\n              Login\r\n            </button>\r\n            <p>\r\n              Don't have an account?\r\n              <Link to='/signup' className='form-signup-link'>\r\n                {' '}\r\n                sign up\r\n              </Link>\r\n            </p>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","D:\\my-app\\frontend\\src\\components\\posts\\PostsList.js",["61"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Post from './Post';\r\nimport axios from 'axios';\r\n\r\nfunction PostsList() {\r\n  let history = useHistory();\r\n  const token = localStorage.getItem('token');\r\n  if (!token) {\r\n    history.push('/login');\r\n  }\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get('http://localhost:8080/posts')\r\n      .then((response) => {\r\n        setPosts(response.data);\r\n      })\r\n      .catch((err) => {\r\n        history.push('/login');\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <section>\r\n      <div className='container'>\r\n        <h3 className='section__title'>/ Technology</h3>\r\n        <div className='posts__container'>\r\n          {posts.map((post) => {\r\n            return <Post key={post.postId} post={post} />;\r\n          })}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default PostsList;\r\n","D:\\my-app\\frontend\\src\\components\\layout\\navigation\\Nav.js",[],"D:\\my-app\\frontend\\src\\components\\auth\\SignUp.js",[],"D:\\my-app\\frontend\\src\\components\\posts\\NewPost.js",[],"D:\\my-app\\frontend\\src\\components\\layout\\navigation\\SignedInLinks.js",[],"D:\\my-app\\frontend\\src\\components\\posts\\Post.js",["62","63"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// import moment from 'moment';\r\n\r\nconst truncateStr = (str, num) => {\r\n  if (str.length <= num) {\r\n    return str;\r\n  }\r\n  return str.slice(0, num) + '...';\r\n};\r\n\r\n// const displayTime = (time) => {\r\n//   const timeStr = new Date(time).toString();\r\n//   moment.locale();\r\n\r\n//   return timeStr;\r\n// };\r\n\r\nfunction Post({ post }) {\r\n  const {\r\n    title,\r\n    description,\r\n    url: img,\r\n    author,\r\n    // createdAt: time,\r\n    postId,\r\n  } = post;\r\n  return (\r\n    <article className='single-post'>\r\n      <div className='post'>\r\n        <div className='post__header'>\r\n          <Link to={`/posts/${postId}`}>\r\n            <img src={img} alt='image' className='post__img radius__img' />\r\n          </Link>\r\n        </div>\r\n\r\n        <div className='post__body'>\r\n          <Link className='post__desc'>{title}</Link>\r\n          <p>\r\n            {truncateStr(description, 100)}\r\n            <a href='' className='readmore'>\r\n              {' '}\r\n              Read more\r\n            </a>\r\n          </p>\r\n          {/* author */}\r\n          <div className='author'>\r\n            <span> {author}</span>\r\n          </div>\r\n          <ul className='post__meta'>\r\n            <li className='meta__item'>\r\n              {/* <span className='meta__value'>{displayTime(time)}</span> */}\r\n              <span className='meta__value'>December 28, 2020</span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","D:\\my-app\\frontend\\src\\components\\layout\\navigation\\SignedOutLinks.js",[],"D:\\my-app\\frontend\\src\\components\\popup\\Popup.js",[],"D:\\my-app\\frontend\\src\\components\\popup\\PopupSuccess.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":7,"column":8,"nodeType":"70","messageId":"71","endLine":7,"endColumn":21},{"ruleId":"72","severity":1,"message":"73","line":23,"column":6,"nodeType":"74","endLine":23,"endColumn":8,"suggestions":"75"},{"ruleId":"76","severity":1,"message":"77","line":33,"column":13,"nodeType":"78","endLine":33,"endColumn":76},{"ruleId":"79","severity":1,"message":"80","line":41,"column":13,"nodeType":"78","endLine":41,"endColumn":45},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'SignedInLinks' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["83"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},"Update the dependencies array to be: [history]",{"range":"86","text":"87"},[580,582],"[history]"]